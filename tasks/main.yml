---
- name: Add repositories
  yum_repository:
    name: '{{item.name}}'
    baseurl: '{{item.baseurl}}'
    description: '{{item.description | default(item.name)}}'
    file: '{{item.file | default(item.name)}}'
    enabled: '{{item.enabled | default("no")}}'
    gpgcheck: '{{item.gpgcheck | default("no")}}'
    gpgkey: '{{item.gpgkey | default(omit)}}'
    owner: '{{item.owner | default("root")}}'
    group: '{{item.group | default("root")}}'
    mode: '{{item.mode | default(0644)}}'
    state: present
  with_items:
    - '{{mysql_repos}}'

- name: Install packages
  yum: name={{item}} state=present enablerepo='{{mysql_enabled_repos}}'
  with_items:
    - '{{mysql_packages}}'

- name: Find current datadir and socket
  command: >
    mysql -u root -p{{mysql_root_password}} -B --disable-column-names -e 'select @@datadir; select @@socket;'
  failed_when: 'mysql__r_values.rc > 0 and "ERROR 2002 (HY000)" not in mysql__r_values.stderr'
  changed_when: false
  check_mode: no
  register: mysql__r_values
  no_log: true

- name: Stop service if datadir or socket are to be changed
  service: name=mysql state=stopped
  when:
    - mysql__r_values.stderr == ''
    - (mysql_datadir | regex_replace('\\/$', '') != mysql__r_values.stdout_lines[0] | regex_replace('\\/$', '')) or
      (mysql_socket != mysql__r_values.stdout_lines[1])



- name: Configure mariadb to include files from my.cnf.d
  template: dest=/etc/my.cnf src=my.cnf.j2 owner=root group=root mode=0644
  notify: Restart mysql

- name: Configure server
  template: dest=/etc/my.cnf.d/server.cnf src=server.cnf.j2 owner=root group=root mode=0644
  notify: Restart mysql

- name: Make sure datadir is present
  file: path={{mysql_datadir}} state=directory owner=mysql group=mysql mode=0755

- name: Make sure directory for the socket is present
  file: path={{mysql_socket| dirname}} state=directory owner=mysql group=mysql mode=0755

- name: Initialize datadir if mysql contents are not present
  command: mysql_install_db
  args:
    creates: '{{mysql_datadir}}/mysql'

- name: Enable service
  service: name=mysqld state=started enabled=yes

- block:
  - name: Secure installation
    mysql_user: name=root host={{item}} check_implicit_admin=yes password='{{mysql_root_password}}' login_user=root login_password='{{mysql_root_password}}' config_file=/etc/my.cnf
    with_items:
      - '{{ansible_fqdn | lower}}'
      - '{{ansible_hostname | lower}}'
      - localhost
      - 127.0.0.1
      - ::1
    when: mysql_root_password != ''

  - name: Remove anonymous users
    mysql_user: name='' host={{item}} state=absent login_user=root login_password='{{mysql_root_password}}' config_file=/etc/my.cnf
    with_items:
      - '{{ansible_hostname | lower}}'
      - '{{ansible_fqdn | lower}}'
      - localhost

  - name: Remove test database
    mysql_db: name=test state=absent login_user=root login_password='{{mysql_root_password}}' config_file=/etc/my.cnf

  when: mysql_secure

- import_tasks: encryption.yml
  when: mysql_encryption_enabled and mysql_encryption_key_plugin == 'file'

- name: Add databases
  mysql_db: name={{item.name}} state=present login_user=root login_password='{{mysql_root_password}}' config_file=/etc/my.cnf
  with_items: '{{mysql_databases}}'
  loop_control:
    label: '{{item | combine({"password": "***"})}}'

- name: Add users
  mysql_user: name={{item.0.user}} host={{item.1}} password='{{item.0.password}}' priv='{{item.0.name}}.*:{{item.0.privileges | default("ALL")}}' state=present login_user=root login_password='{{mysql_root_password}}' append_privs='{{mysql_append_privs}}' config_file=/etc/my.cnf
  with_subelements:
    - '{{mysql_databases}}'
    - hosts
  loop_control:
    label: '{{[item.0 | combine({"password": "***"}), item.1]}}'

- import_tasks: backup.yml
  when: mysql_backup
